# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        
        dummy = ListNode()
        node = dummy
        count = 0
        while l1 and l2:
            if count == 1:
                add = l1.val + l2.val + 1
                count -= 1
            else:
                add = l1.val + l2.val
            if add >= 10:
                add = str(add)
                newNode = ListNode(int(add[1]))
                count += 1
            else:
                newNode = ListNode(add) 
            node.next = newNode
            node = node.next
            l1 = l1.next
            l2 = l2.next
        
        while l1:
            if count == 1:
                add = l1.val + 1
                count -= 1
            else:
                add = l1.val
            if add >= 10:
                add = str(add)
                newNode = ListNode(int(add[1]))
                count += 1
            else:
                newNode = ListNode(add) 
            node.next = newNode
            node = node.next
            l1 = l1.next
        while l2:
            if count == 1:
                add = l2.val + 1
                count -= 1
            else:
                add = l2.val
            if add >= 10:
                add = str(add)
                newNode = ListNode(int(add[1]))
                count += 1
            else:
                newNode = ListNode(add) 
            node.next = newNode
            node = node.next
            l2 = l2.next
        if count == 1:
            newNode = ListNode(1)
            node.next = newNode
        return dummy.next
            
            
        
