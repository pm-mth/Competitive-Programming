class Solution:
    def topKFrequent(self, words: List[str], k: int) -> List[str]:
        count = defaultdict(int)
        answer = []
        items = []
        
        for item in words:
            count[item] += 1
        for key, val in count.items():
            items.append([-1*(val), key])
        heapq.heapify(items)
         
        i = 0
        while i < k:  
            val = heapq.heappop(items)[1]
            answer.append(val)
            i += 1
        return answer
#                 for i in range(len(answer) - 1, 1, -1):
#                     if answer[i] < answer[i-1]:
#                         answer[i], answer[i -1] = answer[i-1], answer[i]
            
        
        
       
        
