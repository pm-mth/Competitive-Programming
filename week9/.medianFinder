class MedianFinder:

    def __init__(self):
        self.left = []
        self.right = []
        

    def addNum(self, num: int) -> None:
        if not self.left or -1 * self.left[0] > num:
            heapq.heappush(self.left, -1*num)
        else:
            heapq.heappush(self.right, num)
#         balance

        if len(self.right) > len(self.left):
             heapq.heappush(self.left, -1*heapq.heappop(self.right))
        elif len(self.right) + 1 < len(self.left):
            heapq.heappush(self.right, -1*heapq.heappop(self.left))
            
        

    def findMedian(self) -> float:
        if len(self.left) == len(self.right):
            return (-1*self.left[0] +  self.right[0])/2
        else:
            return -1*self.left[0]
        
        
        
        

            
        


# Your MedianFinder object will be instantiated and called as such:
# obj = MedianFinder()
# obj.addNum(num)
# param_2 = obj.findMedian()
